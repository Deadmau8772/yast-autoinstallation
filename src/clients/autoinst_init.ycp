/**
 * File:	clients/autoinst_init.ycp
 * Package:	Auto-installation
 * Summary:	Parses XML Profile for automatic installation
 * Authors:	Anas Nashif <nashif@suse.de>
 *
 * $Id$
 *
 * Calls: autoinst_get_profile.ycp
 */

{

    textdomain "autoinst";

    import "Installation";
    import "AutoInstall";
    import "ProfileLocation";
    import "Progress";
    import "Report";
    import "Language";
    import "Console";

    include "ui/common_messages.ycp";
    include "ui/common_popups.ycp";

    include "autoinstall/profileDialogs.ycp";
    include "autoinstall/profileLocation.ycp";
    // include "autoinstall/partitioning.ycp";


    string help_text = UI(_("<p>
Please wait while the system is being prepared for autoinstallation.</p>
"));
    list progress_stages =
	[
	 _("Retrieve & Read Control File"),
	 _("Process Profiles and Rules"),
	 _("Parse control file")
	 ];

    list progress_descriptions =
	[
	 _("Retrieving System Profile"),
	 _("Processing Profiles and Rules"),
	 _("Parsing control file")
	 ];

    Progress::New(
		  _("Preparing System for Automatic Installation"),
		  "",     // progress_title
		  size( progress_stages ),	// progress bar length
		  progress_stages,
		  progress_descriptions,
		  help_text );

    Progress::NextStage();
    Progress::Title(ProfileLocation::message);

    boolean ret = false;
    ProfileLocation::Process();
    while (true)
    {	 
	ret = AutoInstallRules::GetRules();
	if (ret)
	{
	    break;
	}
	else
	{
	    if (ProfileSourceDlg() == `abort)
		return `abort;
	    else
		continue;

	}
    }
    sleep(1000);

    ret = false;
    
    ret = AutoInstallRules::Merge( AutoInstall::xml_tmpfile);
    
    Progress::NextStage();

    // Set reporting behaviour to default, changed later if required
    Report::LogMessages(true);
    Report::LogErrors(true);
    Report::LogWarnings(true);

    Progress::NextStage();
    
    if (!AutoInstall::ProcessProfile()) {
	UI::ErrorPopup(_("Error while parsing the control file.
Check the log files for more details. Fix the
control file and try again.
"));
	return `abort;
    }


    boolean use_utf8 = true;		// utf8 is default

    if (!lookup (UI::GetDisplayInfo(), "HasFullUtf8Support", true))
    {
	use_utf8 = false;		// fallback to ascii
    }

    string language = AutoInstall::Profile["install","general","language"]:Language::language;    
    Language::Set(language);
    
    // Set Console font
    
    Console::SelectFont( language );

    Installation::encoding = (use_utf8) ? "UTF-8" : Console::encoding;

    // Set it in YaST2 

    UI::SetLanguage (language, Installation::encoding);
    WFM::SetLanguage(language, "UTF-8");

    y2milestone ("Autoinstall control file %1",  AutoInstall::Profile );
    
    sleep(1000);
    Progress::Finish();
 
    
    return `next;
}
