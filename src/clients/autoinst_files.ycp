/**
 * File:	clients/autoinst_files.ycp
 * Package:	Configuration of XXpkgXX
 * Summary:	Client for autoinstallation
 * Authors:	Anas Nashif <nashif@suse.de>
 *
 * $Id$
 *
 * This is a client for autoinstallation. It takes its arguments,
 * goes through the configuration and return the setting.
 * Does not do any changes to the configuration.
 */

/**
 * @param function to execute
 * @param list of file settings
 * @return map edited settings, Summary or boolean on success depending on called function
 * @example map mm = $[ "FAIL_DELAY" : "77" ];
 * @example map ret = WFM::CallFunction ("autoinst_files", [ "Summary", mm ]);
 */

{

textdomain "autoinst";

y2milestone("----------------------------------------");
y2milestone("Files auto started");

import "AutoinstFile";
import "Wizard";
include "autoinstall/file_dialogs.ycp";

any ret = nil;
string func = "";
list param = [];

/* Check arguments */
if(size(Args()) > 0 && is(Args(0), string)) {
    func = WFM::Args(0);
    if(size(Args()) > 1 && is(Args(1), list))
	param = WFM::Args(1);
}
y2debug("func=%1", func);
y2debug("param=%1", param);



/* Import Data*/
if(func == "Import") {
    ret = AutoinstFile::Import(param);
}
/* Create a  summary*/
else if(func == "Summary") {
    ret = AutoinstFile::Summary();
}
/* Reset configuration */
else if (func == "Reset") {
    AutoinstFile::Import([]);
    ret = [];
}
/* Change configuration (run AutoSequence) */
else if (func == "Change") {
    Wizard::CreateDialog();    
    ret = CustomFileDialog();
    Wizard::CloseDialog();
}
/* Return actual state */
else if (func == "Result") {
    ret = AutoinstFile::Export();
}
/* Write givven settings */
else if (func == "Write") {            
    ret = AutoinstFile::Write();    
}
/* Unknown function */
else {
    y2error("Unknown function: %1", func);
    ret = false;
}

y2debug("ret=%1", ret);
y2milestone("Files auto finished");
y2milestone("----------------------------------------");

return ret;

/* EOF */
}
