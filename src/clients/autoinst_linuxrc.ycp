/**
 * File:	clients/autoinst_linuxrc.ycp
 * Package:	Autoinstallation Configuration System
 * Summary: 	Linuxrc Settings
 * Authors:	Anas Nashif<nashif@suse.de>
 *
 * $Id$
 */
{
    textdomain "autoinst";
    import "Mode";
    Mode::config = true;


    import "Wizard";
    import "Summary";
    import "AutoinstLinuxrc";

    include "wizard/sequencer.ycp";
    include "autoinstall/linuxrc_dialogs.ycp";
    include "ui/common_messages.ycp";
    include "network/ip.ycp";



any ret = nil;
string func = "";
map param = $[];

/* Check arguments */
if(size(Args()) > 0 && is(Args(0), string)) {
    func = WFM::Args(0);
    if(size(Args()) > 1 && is(Args(1), map))
	param = WFM::Args(1);
}
y2debug("func=%1", func);
y2debug("param=%1", param);

/* Create a summary*/
if(func == "Summary") {
    ret = AutoinstLinuxrc::Summary();
}
/* Reset configuration */
else if (func == "Reset") {
    AutoinstLinuxrc::Import($[]);
    ret = $[];
}
/* Change configuration (run AutoSequence) */
else if (func == "Change") {
    ret = linuxrcAutoSequence();
}
/* Import configuration */
else if (func == "Import") {
    ret = AutoinstLinuxrc::Import(param);
}
/* Return actual state */
else if (func == "Export") {
    ret = AutoinstLinuxrc::Export();
}
/* Read current state */
else if (func == "Read") {
    import "Progress";
    Progress::off();
    ret = AutoinstLinuxrc::Read();
    Progress::on();
}
/* Write givven settings */
else if (func == "Write") {
    import "Progress";
    Progress::off();
    AutoinstLinuxrc::write_only = true;
    ret = AutoinstLinuxrc::Write();
    Progress::on();
}
/* Unknown function */
else {
    y2error("Unknown function: %1", func);
    ret = false;
}

y2debug("ret=%1", ret);
y2milestone("AutoinstLinuxrc auto finished");
y2milestone("----------------------------------------");

return ret;

/* EOF */
}
