/**
 * File:	modules/AutoinstConfig.ycp
 * Module:	Auto-Installation
 * Summary:	This module handles the configuration for auto-installation
 * Authors:	Anas Nashif <nashif@suse.de>
 *
 * $Id$
 */
{
    module "AutoinstConfig";
    textdomain "autoinst";
   
    import "Misc";    

    include "autoinstall/xml.ycp";
    include "autoinstall/io.ycp";

 
    // Profile Repository
    global string Repository = "";

    // Package Repository
    global string PackageRepository = "";

    // Alice Repository
    global string AliceRepository = "";

    // Classes
    global string classDir = "";

    // Current file name
    global string currentFile = "";



    //
    // Temporary directory for storing profile before installation starts
    //
    global string tmpdir = (string)SCR::Read( .target.tmpdir );

    //
    // Temporary file name for retrieved system profile
    //
    global string xml_tmpfile = tmpdir + "/autoinst.xml";

    
    
    /**
     * Constructor
     * @return	 void          
     * 
     */

    global define void AutoinstConfig ()
	``{
	
	// Load configuration data from /etc/sysconfig/autoinstall
	Repository = Misc::SysconfigRead( .sysconfig.autoinstall.REPOSITORY, "/var/lib/autoinstall/repository/");		
	AliceRepository  = Misc::SysconfigRead( .sysconfig.autoinstall.ALICE_REPOSITORY, "/tmp");	
	classDir = Misc::SysconfigRead( .sysconfig.autoinstall.CLASS_DIR, Repository + "/classes" );	

	// Set the defaults, just in case.
	if (Repository == "" || Repository == nil )
	{
	    Repository = "/var/lib/autoinstall/repository";
	}
	return;
    }

 

    /**
     * Save()
     * @return	void
     * Save Configuration global settings
     */

    global define void Save ()
	``{
	// Write sysconfig variables.	
	y2milestone("Saving configuration data");
	
	SCR::Write( .sysconfig.autoinstall.REPOSITORY, Repository );	
	SCR::Write( .sysconfig.autoinstall.ALICE_REPOSITORY, AliceRepository );
	SCR::Write( .sysconfig.autoinstall.CLASS_DIR, classDir);
	
	return;
    }


}
