/**
 * File:	modules/AutoinstLinuxrc.ycp
 * Package:	General Options for Auto-installations
 * Authors:	Anas Nashif (nashif@suse.de)
 * Summary:	Handle linuxrc options
 *
 * $Id$
 */
{
    module "AutoinstLinuxrc";
    textdomain "autoinst";

    global string method = "";
    global string server = "";
    global string serverdir = "";
    global string ip = "";
    global string port = "";
    global string netmask = "";
    global string gateway = "";
    global string ayserver = "";
    global string ayserverdir = "";
    global string aymethod = "";
    global string ayport = "";
    global string netdevice = "";
    global string partition = "";
    global string domain = "";
    global string nameserver = "";
    global string workdomain = "";
    global boolean textmode = false;
    global boolean usedhcp = false;

    global string language = "";
    global string keytable = "";



    
    /**
     * Constructor
     *
     */
    define void AutoinstLinuxrc()``{
	return;
    }

    /**
     * Export data
     *
     */
    global define map Export()``{
	map toexport =
	    $[
	      "language":language,
	      "keytable":keytable,
	      "instmode":method,
	      "server":server,
	      "serverdir":serverdir,
	      "ip":ip,
	      "netmask":netmask,
	      "gateway":gateway,
	      "nameserver":nameserver,
	      "domain":domain,
	      "workdomain":workdomain,
	      "usedhcp":usedhcp,
	      "textmode":textmode,
	      "partition":partition,
	      "port":port,
	      "profile_server":ayserver,
	      "profile_protocol":aymethod,
	      "profile_port":ayport,
	      "profile_location":ayserverdir,
	      "info_file": createInfo()
	    ];
	return toexport;
    }

    /**
     * Import data
     *
     */
    global define boolean Import(map settings) ``{

	if (size (settings) == 0)
	{
	    //Provide defaults for autoinstallation editing:
	    //Leave empty.
	    return true;
	}
	method 		= settings["instmode"]:"";
	server 		= settings["server"]:"";
	serverdir	= settings["serverdir"]:"";
	ip		= settings["ip"]:"";
	netmask		= settings["netmask"]:"";
	gateway		= settings["gateway"]:"";
	textmode	= settings["textmode"]:false;
	usedhcp		= settings["usedhcp"]:false;
	port		= settings["port"]:"";
	partition	= settings["partition"]:"";
	nameserver	= settings["nameserver"]:"";
	domain		= settings["domain"]:"";
	workdomain	= settings["workdomain"]:"";
	ayserver	= settings["profile_server"]:"";
	aymethod	= settings["profile_protocol"]:"";
	ayport		= settings["profile_port"]:"";
	ayserverdir	= settings["profile_location"]:"";
	language	= settings["language"]:"";
	keytable	= settings["keytable"]:"";
	return true;
    }



    /**
     * Read Data
     *
     */
    global define void Read() ``{
	return;
    }

    /**
     * Summary of configuration
     *
     */
    global define string Summary()``{



	string summary = "";
	summary = Summary::AddHeader(summary, _("Installation Method"));
	summary = Summary::AddLine(summary, (method != "") ?
				   method : Summary::NotConfigured());
	summary = Summary::AddHeader(summary, _("Initial Installation Language"));
	summary = Summary::AddLine(summary, (language != "") ?
				   language : Summary::NotConfigured());
	summary = Summary::AddHeader(summary, _("Initial Installation Keytable"));
	summary = Summary::AddLine(summary, (keytable != "") ?
				   keytable : Summary::NotConfigured());

	summary = Summary::AddHeader(summary, _("Installation Server"));
	summary = Summary::AddLine(summary, (server != "") ?
				   server : Summary::NotConfigured());
	summary = Summary::AddHeader(summary, _("Installation Server Directory"));
	summary = Summary::AddLine(summary, (serverdir != "") ?
				   serverdir : Summary::NotConfigured());

	return summary;
    }



    global define boolean createInfo()``{
	string content = "
#
# Don't remove the following line:
# start_linuxrc_conf
#
";
	string install = "";
	if (method!="" && server !="" && serverdir != "") {
	    content = content + sformat("install: %1://%2%3\n", method, server, serverdir);
	}
	else if (method!="") {
	    content = content + sformat("instmode: %1\n", method);
	}
	else if (server!="" &&  serverdir != "") {
	    content = content + sformat("server: %1\n", server);
	    content = content + sformat("serverdir: %1\n", serverdir);
	}

	
	map allKeywords =
	    $[
	      "language":language,
	      "keytable":keytable,
	      "ip":ip,
	      "netmask":netmask,
	      "gateway":gateway,
	      "nameserver":nameserver,
	      "domain":domain,
	      "workdomain":workdomain,
	      "partition":partition,
	    ];



	foreach(`k, `v, allKeywords, ``{
	    if (allKeywords[k]:""!="")
		content = content + sformat("%1: %2\n", k, allKeywords[k]:"");
	});

	if (usedhcp)
	    content = content + "Usedhcp: 1\n";
	if (textmode)
	    content = content + "Textmode: 1\n";



	content = content + "
# end_linuxrc_conf
# Do not remove the above comment
#";
	return content;

    }

}
