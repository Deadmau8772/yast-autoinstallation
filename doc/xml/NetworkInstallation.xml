<chapter id="Bootmanagement">
  <title>Network-based Installation</title>        
  <para>
    &ay; provides a method to automatically and identically install groups of
    systems. The first step when preparing a &ay; installation is to decide how
    you want to install the target systems. The following scenario is a good
    example for how to set up and perform automated installations:
  </para>
  <itemizedlist>
    <listitem>
      <para>
	You need to install SuSE Linux on 50 new systems.
      </para>
    </listitem>
    <listitem>
      <para>
	The development department owns 30 out of the 50 new dual processor
	and SCSI systems, and these systems must be installed as clients with
	development software.
      </para>
    </listitem>
    <listitem>
      <para>
	The sales department owns 20 out of the 50 new, uni-processor IDE
	based systems and its systems must be installed as clients with end user
	software and office tools.
      </para><remark>emap 2011-11-07: What about the remaining new systems? Will they be needed in this example? If not better let R&amp;D buy 30 new machines and Sales 20 new ones with different hardware. Um, reading to the end of this file, I wonder if we need this example at all? It's not being used to explain anything. It rather gets in the way. We don't even explain how the different hardware is handled.</remark>
    </listitem>
  </itemizedlist>
  
  <para>
    Prerequisites:
  </para>
  <itemizedlist>
    <listitem>
      <para>a boot server on the same Ethernet segment,</para>
    </listitem>
    <listitem>
      <para>an installation server with the SuSE Linux OS,</para><remark>emap 2011-11-07: Rather with the installation sources? </remark>
    </listitem>
    <listitem>
      <para>an &ay; configuration server that defines rules and profiles.</para>
    </listitem><remark>emap 2011-11-07: This is the first mention of a config server. Is it really needed?</remark>
  </itemizedlist>
  
  <!-- FIXME: Add info about boot server and installation server -->

  <section>
    <title>Configuration Server</title>
    <para>
      A configuration repository holds the control files for multiple
      machines. The control files can have any file names, which have to be
      specified at the boot time of a target client. To avoid supplying the
      profile name for every client, you can define the directory of the
      control files. If a directory is specified, then the target client tries
      to load a file with a name matching its IP address in HEX mode. This has
      the advantage that you will be dealing with consistent file names rather
      than IPs as file names which might lead to some confusion.<remark>emap 2011-11-07: Sounds like no dedicated server is needed, only a repository.</remark>
    </para>
    <para>
      The configuration repository is the same directory you specify
      when using the configuration system for creating control files.
    </para>
    <section>
      <title>&http; Repository</title>
      <para>
	To be able to use the &http; protocol to retrieve control files while
	auto-installing, you need a working &http; server on the server
	side. Install <emphasis>Apache</emphasis> or your favorite web server
	and enable it using &yast;. Normally the web server root directory
	resides in <filename>/srv/www/htdocs</filename> so you need to create
	a subdirectory which will serve your configuration repository.
      </para>
      
    </section>
    <section>
      <title>&nfs; Repository</title>
      <para>
	Create a directory and export it via &nfs; to the target clients. This directory may the same location where you have copied the CDs. (i.e. <filename>/usr/local/SuSE</filename>).<remark>emap 2011-11-07: Change CDs to installation source/repository?</remark>
      </para>
    </section>
    <section>	
      <title>&tftp; Repository</title>
      <para>
	By default the &tftp; directory is available under
	<filename>/tftpboot</filename> which can also contain boot images
	if you are booting over network. Do not forget to enable TFTP in
	the Inetd configuration file
	(<filename>/etc/inetd.conf</filename>). <emphasis>Inetd</emphasis> configuration can be
	done via &yast;.
      </para>
    </section>
  </section>

</chapter>








      <!--
       Local Variables:
       mode: xml
       sgml-parent-document: ("autoyast2.xml" "book" "chapter")
       End:
      -->
