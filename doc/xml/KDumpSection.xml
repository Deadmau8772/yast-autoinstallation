<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN"
"http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd"[

<!ENTITY % daps-entities SYSTEM "entity-decl.ent">
<!ENTITY % daps-network-entities SYSTEM "network-decl.ent">
%daps-entities;
%daps-network-entities;
<!ENTITY % images SYSTEM "images.ent">
%images;

<!ENTITY % entities SYSTEM "entities/en.ent">
%entities;

<!-- Examples -->
<!ENTITY % examples SYSTEM "examples.ent">
%examples;

<!-- components -->
<!ENTITY % components SYSTEM "components.ent">
%components;

]>

  <!-- {{{ Kdump -->

  <section id="CreateProfile.kdump">
    <title>
      Kernel dumps
    </title>

    <note>
      <title>Availability</title><remark>emap 2011-11-06: Add title, maybe: Availability?</remark>
<remark>ke 2011-11-09: done.  "Availability" sounds good.</remark>
      <para>
      This feature is only available since SLES 11 (not openSUSE 11.1). It is not available
      on the <emphasis>zSeries</emphasis> (<emphasis>s390x</emphasis>) architecture.
      </para>
    </note>

    <para>
      With kdump the system is able to create crashdump files if the whole system (i.e., the
      kernel) crashes. Crash dump files contain the memory contents while the system crashed.
      Such core files can be analyzed later by support or a (kernel) developer to find the
      reason for the system crash. Kdump is mostly useful for servers where you cannot
      easily reproduce such crashes but it is important to get the
      problem fixed.
    </para>

    <para>
      The only downside: enabling kdump costs you between 64&nbsp;MiB and
      128&nbsp;MiB of system RAM (on "normal" sized systems), reserved for kdump in case the system crashes and the dump needs to be generated.
    </para>

    <para>This section only describes how to set up kdump with &ay;. It does not describe
      how kdump works. For details, refer to
      the kdump(7) manual page, contained in the <emphasis>kdump</emphasis> package, or to <ulink url="http://en.opensuse.org/Kdump">openSUSE Kdump documentation</ulink>.
    </para>

    <para>
      The following example shows a general kdump configuration.
    </para>

    &example.kdump;

    <!-- {{{ Memory Reservation -->
    <section id="CreateProfile.kdump.reservation">
      <title>Memory Reservation</title>

      <para>
        The first step is to reserve memory for kdump at boot-up. Because the
        memory must be reserved very early during the boot process, the
        configuration is done via a kernel command line parameter called
        <literal>crashkernel</literal>. The reserved memory will be used to
        load a second kernel which will be executed without rebooting if the
        first kernel crashes. This second kernel has a special initrd, which
        contains all programs necessary to save the dump over the network or
        to disk, send a notification e-mail, and finally reboot.
      </para>

      <para>
        Enable or disable that the <literal>crashkernel</literal>
        parameter is written for the default boot kernel with the
        <literal>add_crash_kernel</literal> tag. You can specify the value
        of the <literal>crashkernel</literal> parameter using the
        <literal>crash_kernel</literal> tag.<remark>emap 2011-11-06: Does this para make sense? Seems a bit obscure.</remark>
      </para>

      <para>
        To reserve memory for kdump, specify the <emphasis>amount</emphasis>
        (such as <literal>64M</literal> to reserve 64&nbsp;MiB of memory from
        the RAM) and the <emphasis>offset</emphasis>. The syntax is
        <literal>crashkernel=AMOUNT@OFFSET</literal>. The kernel can auto-detect the
        right offset (with the exception of the Xen hypervisor, where you have to
        specify <emphasis>16M</emphasis> as offset).
        Simply specify <literal>&lt;crash_kernel&gt;crashkernel=64M&lt;/crash_kernel&gt;</literal>
        and the right thing will happen.
      </para>

      <para>
        For the <emphasis>amount</emphasis> of memory, the following values are recommended:
      </para>

        <table frame="top">
          <title>Recommended values for the reserved memory amount</title>
          <tgroup cols="2">
            <thead>
              <row>
                <entry>Platform</entry>
                <entry>Recommended values</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>
                  i386 and x86-64
                </entry>
                <entry>
                  <literal>64M</literal> for small machines (about 2&nbsp;GiB of RAM, 4 cores)
                  and <literal>128M</literal> for larger machines
                </entry>
              </row>
              <row>
                <entry>
                  PPC64
                </entry>
                <entry>
                  <literal>128M</literal> for small machines
                  and <literal>256M</literal> for larger machines
                </entry>
              </row>
              <row>
                <entry>
                  IA64
                </entry>
                <entry>
                  <literal>256M</literal> for small machines,
                  <literal>512M</literal> for medium machines and
                  <literal>1G</literal> and more for really large machines
                  (mostly SGI Altix systems)
                </entry>
              </row>
            </tbody>
          </tgroup>
        </table>

      <para>
        You can also use the <emphasis>extended
        command line syntax</emphasis> to specify the amount of reserved
        memory depending on the System RAM. That is useful if you share one &ay;
        profile for multiple installations or if you often remove or install memory
        on one machine. The syntax is:
      </para>

        <screen>BEGIN_RANGE_1-END_RANGE_1:AMOUNT_1,BEGIN_RANGE_2-END_RANGE_2:AMOUNT_2@OFFSET</screen>

      <para>
        <literal>BEGIN_RANGE_1</literal> is the start of the first
        memory range (for example: <literal>0M</literal>) and <literal>END_RANGE_1</literal>
        is the end of the first memory range (can be empty in case "infinity" should
        be assumed) and so on. For example
        <literal>256M-2G:64M,2G-:128M</literal> means to reserve 64&nbsp;MiB of crashkernel
        memory if the system has between 256&nbsp;MiB and 2&nbsp;GiB RAM and to reserve
        128&nbsp;MiB of crashkernel memory if the system has more than 2&nbsp;GiB RAM.
      </para>

      <para>
        The following table shows the settings necessary to reserve memory:
      </para>

        <table frame='top'>
          <title>XML Representation of the Memory Reservation Settings</title>
          <tgroup cols="3">
            <thead>
              <row>
                <entry>Element</entry>
                <entry>Description</entry>
                <entry>Comment</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>add_crash_kernel</entry>
                <entry><para>Set to "true" if memory should be reserved and kdump enabled.
                </para><screen>&lt;add_crash_kernel config:type="boolean"&gt;true&lt;/add_crash_kernel&gt;</screen></entry>
                <entry>required</entry>
              </row>
              <row>
                <entry>crash_kernel</entry>
                <entry><para>Use the syntax of the crashkernel command line as discussed above.
                </para><screen>&lt;crash_kernel&gt;256M:64M&lt;/crash_kernel&gt;</screen></entry>
                <entry>required</entry>
              </row>
            </tbody>
          </tgroup>
        </table>
    </section>
    <!-- }}} -->

    <!-- {{{ Dump Saving -->
    <section id="CreateProfile.kdump.saving">
      <title>
        Dump Saving
      </title>

      <!-- {{{ Target -->
      <section id="CreateProfile.kdump.saving.target">
        <title>
          Target
        </title>

        <para>
          The element <literal>KDUMP_SAVEDIR</literal> specifies the URL to
          where the dump is saved. The following methods are possible:
        </para>
  
        <itemizedlist mark='opencircle'>
          <listitem>
            <para>
              <literal>file</literal> to save to the local disk,
            </para>
          </listitem>
          <listitem>
            <para>
              <literal>ftp</literal> to save to an FTP server (without encryption),
            </para>
          </listitem>
          <listitem>
            <para>
              <literal>sftp</literal> to save to an SSH2 SFTP server,
            </para>
          </listitem>
          <listitem>
            <para>
              <literal>nfs</literal> to save to a NFS location and
            </para>
          </listitem>
          <listitem>
            <para>
              <literal>cifs</literal> to save the dump to a CIFS/SMP export from Samba or Microsoft Windows.
            </para>
          </listitem>
        </itemizedlist>
  
        <para>
          For details see the kdump(5) manual page. Two examples are:
          <literal>file:///var/crash</literal> (which is the default location
          according to FHS) and <literal>ftp://user:password@host:port/incoming/dumps</literal>.
          A subdirectory, with the time stamp contained in the name, will be created and the dumps saved there.
        </para>
  
        <para>
          When the dump is saved to the local disk,
          <literal>KDUMP_KEEP_OLD_DUMPS</literal> can be used to delete old
          dumps automatically. Set it to the number of old dumps that should
          be kept. If the target partition would end up with less free disk
          space than specified in <literal>KDUMP_FREE_DISK_SIZE</literal>, the
          dump is not saved.<remark>emap 2011-11-06: Replaced 'copied' with
          'saved'.</remark>
        </para>
  
        <para>
          If you want to save the whole kernel and the debug
          information (if installed) to the same directory, set
          <literal>KDUMP_COPY_KERNEL</literal> to <literal>true</literal>.
          You'll have everything you need to analyze the dump in one directory
          (except kernel modules and their debugging information).
        </para>
      </section>
      <!-- }}} -->
      <!-- {{{ Filtering and Compression -->
      <section id="CreateProfile.kdump.saving.compression">
        <title>
          Filtering and Compression
        </title>
        
        <para>
          The kernel dump is uncompressed and unfiltered. It can get as
          large as your system RAM. To get smaller files, compress the dump file afterwards. The dump has to be
          decompressed before opening<!--, so the disk space needs to
          be there in any case-->.<remark>emap 2011-11-06: Can we delete this? If the disk space is really smaller than the RAM, it's probably not a smart idea to save the dump on the disk.</remark>
        </para>

        <para>
          To use page compression, which compresses every page and allows dynamic decompression
          with the crash(8) debugging tool, set <literal>KDUMP_DUMPFORMAT</literal> to
          <literal>compressed</literal> (default).
        </para>

        <para>
          You may not want to save all memory pages, for example those filled
          with zeroes. To filter the dump, set the
          <literal>KDUMP_DUMPLEVEL</literal>. 0 produces a full dump and 31 is
          the smallest dump.  The manual pages kdump(5) and makedumpfile(8)
          list for each value which pages will be saved.
        </para>

      </section>
      <!-- }}} -->
      <!-- {{{ Table -->
      <section id="CreateProfile.kdump.saving.summary">
        <title>
          Summary
        </title>
          <table frame='top'>
            <title>XML Representation of the Dump Target Settings</title>
            <tgroup cols="3">
              <thead>
                <row>
                  <entry>Element</entry>
                  <entry>Description</entry>
                  <entry>Comment</entry>
                </row>
              </thead>
              <tbody>
                <row>
                  <entry>KDUMP_SAVEDIR</entry>
                  <entry><para>An URL that specifies the target to which the dump and related files will be saved.
                  </para><screen>&lt;KDUMP_SAVEDRIR&gt;file:///var/crash/&lt;/KDUMP_SAVEDIR&gt;</screen></entry>
                  <entry>required</entry>
                </row>
                <row>
                  <entry>KDUMP_COPY_KERNEL</entry>
                  <entry><para>Set to "true", if not only the dump should be saved to <literal>KDUMP_SAVEDIR</literal> but
                    also the kernel and its debugging information (if installed).
                    </para><screen>&lt;KDUMP_COPY_KERNEL&gt;false&lt;/KDUMP_COPY_KERNEL&gt;</screen></entry>
                  <entry>optional</entry>
                </row>
                <row>
                  <entry>KDUMP_FREE_DISK_SIZE</entry>
                  <entry>
                    <para>Disk space in megabytes that must remain free after
                    saving the dump. If not enough space is available to write the dump and keep the required disk space free, the
                    dump will not be saved.
                    </para><screen>&lt;KDUMP_FREE_DISK_SIZE&gt;64&lt;/KDUMP_FREE_DISK_SIZE&gt;</screen></entry>
                  <entry>optional</entry>
                </row>
                <row>
                  <entry>KDUMP_KEEP_OLD_DUMPS</entry>
                  <entry>
                    <para>The number of dumps that are kept (i.e., not deleted) if <literal>KDUMP_SAVEDIR</literal>
                    points to a local directory. Specify 0 if you do not want any dumps to be automatically deleted, specify -1 if all dumps except the current one should be deleted.
                    </para><screen>&lt;KDUMP_KEEP_OLD_DUMPS&gt;4&lt;/KDUMP_KEEP_OLD_DUMPS&gt;</screen></entry>
                  <entry>optional</entry>
                </row>
              </tbody>
            </tgroup>
          </table>
      </section>
      <!-- }}} -->

    </section>
    <!-- }}} -->
    <!-- {{{ Email Notification -->
    <section id="CreateProfile.kdump.notification">
      <title>
        Email Notification
      </title>

      <para>
        Configure email notification, if you want to be informed when a machine crashes and a dump is saved. 
      </para>
      
      <para>
        Because kdump runs in the initrd, a local
        mail server cannot send the notification email. An SMTP server needs to be specified (see below).<remark>emap 2011-11-06: Removed major section that didn't make sense. Please check if my changes here are correct.</remark>
      </para>
      
      <para>You have to provide exactly one address in
        <literal>KDUMP_NOTIFICATION_TO</literal>. More addresses can be specified in 
        in <literal>KDUMP_NOTIFICATION_CC</literal>. Only
        use email addresses in both cases, not a real name.
      </para>
      
      <para>
        Specify <literal>KDUMP_SMTP_SERVER</literal> and
        (if the server needs authentication) <literal>KDUMP_SMTP_USER</literal> and
        <literal>KDUMP_SMTP_PASSWORD</literal>. Support for TSL or SSL is not available but may be added in the future.
      </para>

        <!-- {{{ Table: XML representation of the email notification settings -->
        <table frame='top'>
          <title>XML Representation of the Email Notification Settings</title>
          <tgroup cols="3">
            <thead>
              <row>
                <entry>Element</entry>
                <entry>Description</entry>
                <entry>Comment</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>KDUMP_NOTIFICATION_TO</entry>
                <entry>
                 <para>
                  Exactly one email address to which the email
                  should be sent. Additional recipients can be specified in
                  <literal>KDUMP_NOTIFICATION_CC</literal>.
                  </para><screen>&lt;KDUMP_NOTIFICATION_TO&gt;tux@example.com&lt;/KDUMP_NOTIFICATION_TO&gt;</screen></entry><remark>emap 2011-11-06: Do we really want to use an actual email address here?</remark>
<remark>ke 2011-11-09: no, use example.com</remark>
                <entry>optional (notification disabled if empty)</entry>
              </row>
              <row>
                <entry>KDUMP_NOTIFICATION_CC</entry>
                <entry><para>Zero, one or more recipients that are in the cc line of the notification email.
                </para><screen>&lt;KDUMP_NOTIFICATION_CC&gt;spam@suse.de devnull@suse.de&lt;/KDUMP_NOTIFICATION_CC&gt;</screen></entry>
                <entry>optional</entry>
              </row>
              <row>
                <entry>KDUMP_SMTP_SERVER</entry>
                <entry><para>
                  Host name of the SMTP server used for mail delivery. SMTP authentication is supported (see <literal>KDUMP_SMTP_USER</literal>
                  and <literal>KDUMP_SMTP_PASSWORD</literal>) but TSL and SSL are <emphasis>not</emphasis>.
                  </para><screen>&lt;KDUMP_SMTP_SERVER&gt;email.suse.de&lt;/KDUMP_SMTP_SERVER&gt;</screen></entry>
                <entry>optional (notification disabled if empty)</entry>
              </row>
              <row>
                <entry>KDUMP_SMTP_USER</entry>
                <entry><para>
                  User name used together with <literal>KDUMP_SMTP_PASSWORD</literal>
                  for SMTP authentication.
                  </para><screen>&lt;KDUMP_SMTP_USER&gt;bwalle&lt;/KDUMP_SMTP_USER&gt;</screen></entry>
                <entry>optional</entry>
              </row>
              <row>
                <entry>KDUMP_SMTP_PASSWORD</entry>
                <entry><para>
                  Password used together with <literal>KDUMP_SMTP_USER</literal>
                  for SMTP authentication.
                  </para><screen>&lt;KDUMP_SMTP_PASSWORD&gt;geheim&lt;/KDUMP_SMTP_PASSWORD&gt;</screen></entry>
                <entry>optional</entry>
              </row>
            </tbody>
          </tgroup>
        </table>
        <!-- }}} -->
    </section>
    <!-- }}} -->
    <!-- {{{ Kdump kernel settings -->
    <section id="CreateProfile.kdump.kernel">
      <title>
        Kdump Kernel Settings
      </title>

      <para>
        As already mentioned, a special kernel is booted to save the dump.
        If you don't want to use the auto-detection mechanism to find out which kernel
        is used (see the kdump(5) manual page that describes the algorithm which
        is used to find the kernel), you can specify the version of a custom kernel
        in <literal>KDUMP_KERNELVER</literal>. If you set it to
        <literal>foo</literal>, then the kernel located in
        <filename>/boot/vmlinuz-foo</filename> or <filename>/boot/vmlinux-foo</filename>
        (in that order on platforms that have a <filename>vmlinuz</filename> file)
        will be used.
      </para>

      <para>
        You can specify the command line used to boot the kdump kernel.
        Normally the boot command line is used minus some settings that make no sense with kdump (like the <literal>crashkernel</literal> parameter) plus
        some settings needed by kdump (see the manual page kdump(5)).
        If you just want some additional parameters like a overwritten console setting
        then use <literal>KDUMP_COMMANDLINE_APPEND</literal>. If you know what you're doing
        and you want to specify the whole command line, set <literal>KDUMP_COMMANDLINE</literal>.
      </para>

        <!-- {{{ Table: XML representation of the kernel settings -->
        <table frame='top'>
          <title>XML Representation of the Kernel Settings</title>
          <tgroup cols="3">
            <thead>
              <row>
                <entry>Element</entry>
                <entry>Description</entry>
                <entry>Comment</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>KDUMP_KERNELVER</entry>
                <entry><para>Version string for the kernel used for kdump. Leave it
                  empty to use the auto-detection mechanism (strongly recommended).
                  </para><screen>&lt;KDUMP_KERNELVER&gt;2.6.27-default&lt;/KDUMP_KERNELVER&gt;</screen></entry>
                <entry>optional (auto-detection if empty)</entry>
              </row>
              <row>
                <entry>KDUMP_COMMANDLINE_APPEND</entry>
                <entry><para>Additional command line parameters for the kdump kernel.
                </para><screen>&lt;KDUMP_COMMANDLINE_APPEND&gt;console=ttyS0,57600&lt;/KDUMP_COMMANDLINE_APPEND&gt;</screen></entry>
                <entry>optional</entry>
              </row>
              <row>
                <entry>KDUMP_COMMANDLINE</entry>
                <entry><para>
                  Overwrite the automatically generated kdump command line. Use with care.
                  In most cases, <literal>KDUMP_COMMANDLINE_APPEND</literal> should suffice.
                  </para><screen>&lt;KDUMP_COMMANDLINE_APPEND&gt;root=/dev/sda5 maxcpus=1 irqpoll&lt;/KDUMP_COMMANDLINE&gt;</screen></entry>
                <entry>optional<!-- (email notification disabled if empty)--></entry><remark>emap 2011-11-06: I don't think the email stuff belongs here.</remark>
              </row>
            </tbody>
          </tgroup>
        </table>
        <!-- }}} -->
    </section>
    <!-- }}} -->
    <!-- {{{ Expert settings -->
    <section id="CreateProfile.kdump.expert">
      <title>
        Expert Settings
      </title>

        <!-- {{{ Table: XML representation of the expert settings -->
        <table frame='top'>
          <title>XML Representation of the Expert Settings</title>
          <tgroup cols="3">
            <thead>
              <row>
                <entry>Element</entry>
                <entry>Description</entry>
                <entry>Comment</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>KDUMP_IMMEDIATE_REBOOT</entry>
                <entry><para><literal>true</literal> if the system should be rebooted automatically
                  after the dump has been saved, <literal>false</literal> otherwise. The default
                  is to reboot the system automatically.
                  </para><screen>&lt;KDUMP_IMMEDIATE_REBOOT&gt;true&lt;/KDUMP_IMMEDIATE_REBOOT&gt;</screen></entry>
                <entry>optional</entry>
              </row>
              <row>
                <entry>KDUMP_VERBOSE</entry>
                <entry><para>Bitmask that specifies how verbose the kdump process should be.
                  Read kdump(5) for details.
                  </para><screen>&lt;KDUMP_VERBOSE&gt;3&lt;/KDUMP_VERBOSE&gt;</screen></entry>
                <entry>optional</entry>
              </row>
              <row>
                <entry>KEXEC_OPTIONS</entry>
                <entry><para>Additional options that are passed to <application>kexec</application>
                  when loading the kdump kernel. Normally empty.
                  </para><screen>&lt;KEXEC_OPTIONS&gt;--noio&lt;/KEXEC_OPTIONS&gt;</screen></entry>
                <entry>optional</entry>
              </row>
            </tbody>
          </tgroup>
        </table>
        <!-- }}} -->

    </section>
    <!-- }}} -->

  </section>
  <!-- }}} -->


