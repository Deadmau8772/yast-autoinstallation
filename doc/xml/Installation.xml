
<chapter id="Invoking">
  <title>The Auto-Installation Process</title>
  <para>
  </para>
  <section id="Installation.process">
    
    <title>
      Introduction
    </title>
    <para>
      After the system has booted into an automatic installation and the
      control file has been retrieved, &yast; configures the system according
      to the information provided in the control file. All configuration
      settings are summarized in a window that is shown by default and should
      be deactivated if a fully automatic installation is needed.
    </para>
    <para>
      By the time &yast; displays the summary of the configuration, &yast; has
      only probed hardware and prepared the system for
      auto-installation. Nothing has been changed in the system yet. In case
      of any error, you can still abort the process.
    </para>
        
    <para>
      A system should be automatically installable without the need to have
      any graphic adaptor or monitor. Having a monitor attached to the client
      machine is nevertheless recommended so you can supervise the process and
      to get feedback in case of errors. Choose between the graphical (Qt or GTK)<remark>emap 2011-11-07: Should this read 'graphical' or 'X11'?</remark>
<remark>ke 2011-11-09: I added gtk.</remark> and the text-based
      Ncurses interfaces. For headless clients, system messages
      can be monitored using the serial console.
    </para>
    <section id="Installation.Interface.X11">
      <title>
	X11 Interface (graphical)
      </title>
      <para>
	This is the default interface while auto-installing. No special
	variables are required to activate it.
      </para>
    </section>
    <section id="Installation.Interface.SerialConsole">
      <title>
	Serial console
      </title>
      <para>
	Start installing a system using the serial console by adding the
	keyword "console" (i.e. console=ttyS0) to the command line of the
	kernel. This starts linuxrc in console mode and later &yast; in serial
	console mode.
      </para>
    </section>
    <section id="Installation.Interface.Ncurses">
      <title>
	Text-based &yast; Installation
      </title>
      <para>
	This option can also be activated on the command line. This will start
	YaST2 in <emphasis>Ncurses</emphasis> mode. To start &yast; in text
	mode, add <emphasis>textmode=1</emphasis> on the command line.
      </para>
      <para>
	Starting &yast; in text mode is recommended when installing a client
	with less than 64 MB or when X11 is not being configured at all,
	especially on headless machines.
      </para>
    </section>
  </section>

  <section id="bootmedium">
    <title>Choosing the Right Boot Medium</title>
    <para>
      There are different methods for booting the client. The computer can
      boot from its network interface card (NIC) to receive the boot images
      via &dhcp; or TFTP. Alternatively a suitable kernel and initrd image can
      be loaded from a floppy or a bootable CD-ROM.
    </para>
    <section>
      <title>
	Booting from a floppy
      </title>
      <para>
	For testing/rescue purposes or because the NIC does not have a PROM or PXE
	you can build a boot floppy to use with &ay;. Using a floppy
	to initiate an auto-install process is limited due to the size of the
	data a floppy can hold. However, it is still  possible to use
	floppies when auto-installing a single, disconnected machine.
      </para>
      <para>
	Floppies can also store the control file, especially when using
	the original  &company-suse;  CD-ROMs for a single, disconnected machine. Via the
	kernel command line, you can specify the location of the control
	file on the floppy.
      </para><remark>emap 2011-11-07: Would people still use floppies these days? I'd expect USB sticks to be a lot more common.</remark>
      <para>
	Even without specifying any command line options, it is still possible
	to initiate the auto-install process by placing a control file on a
	floppy with the pre-defined file name
	<filename>autoinst.xml</filename>. &yast; will check for
	<filename>autoinst.xml</filename> upon startup and if it was found it
	will switch from interactive to automated installation.
      </para>
    </section>

    <section>
      <title>Booting from CD-ROM</title>
      <para>
	You can use the original &company-suse; CD-ROMs in combination with
	other media. For example, the control file can be provided via a
	floppy or a specified location on the network.
      </para>
      <para>
	Alternatively, create a customized CD-ROM that holds only the package
	you need <remark>emap 2011-11-07: Why not name the
	package?</remark>and the control file. If you need to change the
	configuration, you'll have to create a new CD-ROM.
      </para>
    </section>

    <section>
      <title>Booting via PXE over the network</title>
      <para>
        Booting via PXE requires a DHCP and a TFTP server in your network. The computer
        will boot then without a physical media like a boot floppy or CDROM.
      </para>
      <para>
        Here is an example of a
        <filename>/srv/tftp/pxelinux.cfg/default</filename> file:
        </para><remark>emap 2011-11-07: Update the example to SLES11?</remark>
      <screen>
default SLES9

# install SLES9
label SLES9
  kernel linux_sles9
    append initrd=initrd_sles9 vga=0x0314 install=.... autoyast=... language=de_DE

# boot harddisc
label hd·
  LOCALBOOT 0
      </screen>
      <para>
        We recommended you add the vga=... parameter with a valid value for graphical
        installations, to trigger an installation with the frame buffer device instead
        of the vesa driver or ncurses mode.
      </para>
      <para>
        Here is as an example of a <filename>/etc/dhcp.conf</filename> file:
      </para>
      <screen>
option domain-name-servers 192.168.66.1;
default-lease-time 600;
max-lease-time 7200;
ddns-update-style none; ddns-updates off;
log-facility local7;
option grub-menufile code 150 = text;
option grub-menufile "(nd)/menu.lst";·
subnet 192.168.66.0 netmask 255.255.255.0 {
        range 192.168.66.100 192.168.66.200;
        # PXE related stuff ...
        #
        # "next-server" defines the tftp server which will·
        # serve the pxelinux image to the PXE clients.
        next-server 192.168.66.1;
        allow booting;
        allow bootp;
        option routers 192.168.66.1; # default gateway

        #
        # "filename" specifies the pxelinux image on the tftp server·
        # which will be served to the PXE clients.
        # The configured tftp server on 192.168.100.1 runs in a·
        # "change-root jail" to /srv/tftpboot
        filename "pxelinux.0";
}
      </screen>
      <para>
        A problem you might run into if you do installation via PXE is that the
        installation will run into an endless loop, because after the first reboot,
        the machine is doing PXE boot again and restarts the installation instead
        of booting from hard disk for the second stage of the installation.
      </para>
      <para>
        This problem can be solved in different ways. One way is to use an http server
        to provide the &ay; profile. And, instead of a static profile, run a CGI script
        on the web server that provides the profile and changes the TFTP server
        configuration for your target host. Then the next PXE boot of the
        machine will be from hard disk by default.
      </para>
      <para>
        Another way is to use &ay; to upload a new PXE boot configuration for the target host via the profile:
      </para>
        <screen>
          <![CDATA[
      <pxe>
       <pxe_localboot config:type="boolean">true</pxe_localboot>
       <pxelinux-config>
DEFAULT linux
  LABEL linux
  localboot 0


       </pxelinux-config>
       <tftp-server>192.168.66.1</tftp-server>
       <pxelinux-dir>/pxelinux.cfg</pxelinux-dir>
       <filename>__MAC__</filename>   <!-- since openSUSE 11.2, not SLES11 -->
     </pxe>
]]>
        </screen>
        <para>
         This entry will upload a new configuration for the target host to the tftp server shortly
       before the first reboot happens. In most installations the TFTP daemon runs as user
       "nobody". You have to make sure this user has write permissions to the <filename>pxelinux.cfg</filename>
       directory.
       So if your machine has the IP address "192.168.66.195", a file <filename>C0A842C3</filename> will
       be uploaded. When the machine reboots and receives the same IP address
       via DHCP, the new configuration will be used, telling the target host to book from hard disk.
      </para>
      <para>
       If you want to do another auto-installation on the same machine, you
       have to remove the file from the TFTP server.
      </para>
      <para>
       Since openSUSE 11.2 (not SLES11), you can also configure the filename
       that will be uploaded.  If you use the "magic" __MAC__ filename, the
       filename will be the mac address of your machine like this
       "01-08-00-27-79-49-ee". If the filename setting is missing, the IP
       address will be used for the filename.
      </para>
    </section>
  </section>

  <section id="invoking_autoinst">
    <title id="invoking_autoinst.title">
      Invoking the Auto-Installation Process
    </title>

    <section>
      <title>Command Line Options</title>
      <para>
	Adding the command line variable <emphasis>autoyast</emphasis> causes
	<emphasis>linuxrc</emphasis> to start in automated mode.
	<command>linuxrc</command> searches for a configuration file<remark>emap 2011-11-07: Is this the profile? Better elaborate on this config file.</remark>, which
	should be distinguished from the main control file in the following
	places:
      </para>
      <itemizedlist>
	<listitem>
	  <para>in the root directory of the initial RAM disk used for booting
	    the system,</para>
	</listitem>
	<listitem>
	  <para>in the root directory of the floppy.</para>
	</listitem>
      </itemizedlist>
      <para>
	The configuration file used by <command>linuxrc</command> can have the
	following keywords (for a detailed description of how <command>linuxrc</command> works and
	other keywords, see <quote><xref linkend='appendix.linuxrc'
	    endterm="appendix.linuxrc.title"></xref></quote> ):
      </para>   
      
      <table frame='top'>
	<title>Keywords for <command>linuxrc</command></title>
	<tgroup cols='2'>
	  <thead>
	    <row>
	      <entry>Keyword</entry>
	      <entry>Value</entry>
	    </row>
	  </thead>
	  
	  
	  <tbody>
	    
	    <row><entry>netdevice</entry><entry>Network device to use for
		network setup (for  &bootp; and &dhcp; requests)</entry></row> 
	    <row><entry>server</entry><entry>Server (NFS) to contact for source directory</entry></row>
	    <row><entry>serverdir</entry><entry>Directory on NFS Server </entry></row>
	    <row><entry>hostip</entry><entry>When empty, client sends  &bootp;  request, otherwise client is configured with entered IP configuration.</entry></row>
	    <row><entry>netmask</entry><entry>Netmask</entry></row>
	    <row><entry>gateway</entry><entry>Gateway</entry></row>
	    <row><entry>nameserver</entry><entry>Nameserver</entry></row>
	    <row><entry>insmod</entry><entry>Kernel modules to load</entry></row>
	    <row>
	      <entry>autoyast</entry>
	      <entry>Location of the the control file for automatic installation, i.e. <emphasis>autoyast=http://192.168.2.1/profiles/</emphasis></entry>

	    </row>
	    <row>
	      <entry>install</entry>
	      <entry>Location of the installation directory, i.e. <emphasis>install=nfs://192.168.2.1/CDs/</emphasis> </entry>
	    </row>
	    <row>
	      <entry>instmode</entry>
	      <entry>Installation mode, i.e. nfs, http etc. (not needed if
		<emphasis>install</emphasis> is set)</entry>
	    </row>
            <row>
              <entry>y2confirm</entry>
              <entry>Even with &lt;confirm&gt;no&lt;/confirm&gt; in the profile, the confirm proposal comes up (available since SUSE Linux 10.1/SLES10).
              </entry>
            </row>
	  </tbody>
	</tgroup>
      </table>
      
      
      
      <para>
	These variables and keywords will bring the system up to the point
	where &yast; can take over with the main control file. Currently, the
	source medium is
	automatically discovered, which in some cases makes it possible to
	initiate the auto-install process without giving any instructions to
	<command>linuxrc</command>.
      </para>

      <para>
	The traditional <command>linuxrc</command> configuration file
	(<filename>info</filename>) has the function of
	giving the client enough information about the installation server and
	the location of the sources. In most cases, this file is not needed; it is however
	needed in special network  environments where  &dhcp; and &bootp;  are not
	used or when special kernel modules have to be loaded.      
      </para>
      <para>
	All linuxrc keywords 
	can be passed to <command>linuxrc</command> using the kernel command
	line. The command line can also be set when creating network bootable
	images or it can be passed to the kernel using a specially configured
	&dhcp;  server in combination with Etherboot or &pxe;.<remark>emap 2011-11-07:Obscure paragraph. What is set in the command line? And what is the 'it' that can be passed to the kernel? Probably not the command line itself.</remark>
      </para>
      <para>	
	The command line variable
	<emphasis>autoyast</emphasis> can be used in the format described in table  <quote><xref
	    linkend="commandLineAutoYaST" endterm="commandLineAutoYaST.title"></xref></quote>
      </para>
      
      <table frame='top' id="commandLineAutoYaST">
	<title id="commandLineAutoYaST.title">Command Line Variables for &ay;</title>
	<tgroup cols='2'>
	  <thead>	  
	    <row>
	      <entry>
		Command line variable
	      </entry><entry>Description</entry>
	    </row>
	  </thead>	
	  <tbody>
	    <row><entry>autoyast=default</entry><entry>Default auto-installation option.</entry></row>
	    <row><entry>autoyast=file://&lt;path&gt;</entry><entry>Looks for
		control file in specified path (relative to source root
		directory, i.e. <emphasis>file:///autoinst.xml</emphasis> if in
		the top directory of a CD-ROM and you did an installation from CD).</entry></row>
	    
	    <row>
	      <entry>
		autoyast=device://&lt;device&gt;/&lt;file&gt;</entry><entry>Looks
		for control file on a storage device (only device name needed
		without full path, i.e. /dev/sda1 is wrong, use only sda1 instead).
        Since openSUSE 11.2 (not SLES11) you can omit specifying the device and trigger
        &ay; to search all devices (autoyast=device:///my.xml).
	      </entry>
	    </row>

	    
	    <row>
	      <entry>autoyast=floppy://&lt;path&gt;</entry>
	      <entry>Looks for control file on a floppy (useful when booting
		from CD). Since SLES10 SP1 and later the fallback is looking on USB devices.</entry><remark>emap 2011-11-07: Ah, here are USB devices. I think we could use more about this instead of floppies.</remark>
	    </row>
	    <row>
	      <entry>autoyast=nfs://&lt;server&gt;/&lt;path&gt;</entry>
	      <entry>Looks for control file on &lt;server&gt; </entry>
	    </row>
	    <row>
	      <entry>autoyast=http://[user:password@]&lt;server&gt;/&lt;path&gt;</entry>
	      <entry>Retrieves the control file from a web server using the HTTP protocol.</entry>
	    </row>
	    <row>
	      <entry>autoyast=https://[user:password@]&lt;server&gt;/&lt;path&gt;</entry>
	      <entry>Retrieves the control file from a web server using HTTPS (encrypted connection) protocol (possible since SL 10.1 and SLES10).</entry>
	    </row>
	    <row>
	      <entry>autoyast=tftp://&lt;server&gt;/&lt;path&gt;</entry>
	      <entry>Retrieve the control file via TFTP.</entry>
	    </row>
	    <row>
	      <entry>autoyast=ftp://[user:password@]&lt;server&gt;/&lt;path&gt;</entry>
	      <entry>Retrieve the control file via FTP.</entry>
	    </row>
	    <row>
	      <entry>autoyast=usb://&lt;path&gt; (since SLES10 SP1)</entry>
	      <entry>Retrieve the control file from USB devices (&ay; will search all connected USB devices).</entry>
	    </row>
	    <row>
	      <entry>autoyast=relurl://&lt;path&gt; (since openSUSE 11.0)</entry>
	      <entry>Retrieve the control file from the installation source (install=....).</entry>
	    </row>
	    <row>
	      <entry>autoyast=slp (since openSUSE 11.2, not SLES 11)</entry>
	      <entry>Query the location of the profile from an SLP server (service:autoyast:...). Since openSUSE 11.3 you can add a "description=" attribute so you can "translate" the URL into something more readable.</entry>
	    </row>
	    <row>
	      <entry>autoyast=cifs://&lt;server&gt;/&lt;path&gt; (since openSUSE 11.2, not SLES 11)</entry>
	      <entry>Looks for control file on &lt;server&gt; with CIFS</entry>
	    </row>
	    <row>
	      <entry>autoyast=label://&lt;label&gt;/&lt;path&gt; (since openSUSE 11.3, not SLES 11)</entry>
	      <entry>Searches for control file on a device with the specified label</entry>
	    </row>
	  </tbody>
	</tgroup>
      </table>
      <para>
	Several scenarios for auto-installation are possible using different
	types of infrastructure and source media. The simplest way is to use
	the source media from &company-suse;. In that case you have
	either a DVD with all  &company-suse;  packages or a set of CD-ROMs. To initiate the
	auto-installation process however, the auto-installation command line
	variable should be entered at system boot-up and the control file should
	be accessible to &yast;. The following list of scenarios explains how
	the control file can be supplied as well as the setup needed for the
	auto-installation process to succeed.
      </para>
      <itemizedlist>
	<listitem>
	  <para>
	    Using original CD-ROMs from  &company-suse;:
	  </para>
	  <para>
	    To use the original CD-ROMs, you need a media with the control
	    file. The control file can reside in the following locations:
	  </para>
	  <orderedlist>
	    <listitem>
	      <para>
		<emphasis>Floppy</emphasis>: Control file accessible via the
		<emphasis>autoyast=floppy</emphasis> option. &yast; also searches
		upon startup for a file named
		<filename>autoinst.xml</filename>. If such a file is found, YaST2
		will switch into auto-installation mode even if no special
		command line variables were supplied.  (See <quote><xref
		    linkend="autoinstall.singlesystem"
		    endterm="autoinstall.singlesystem.title"></xref></quote>.)
	      </para>
	    </listitem>
	    <listitem>
	      <para>
		<emphasis>Network</emphasis>: Control file accessible via the
		<emphasis>autoyast=nfs://..</emphasis>,
		<emphasis>autoyast=ftp://..</emphasis>,
		<emphasis>autoyast=http://..</emphasis> or
		<emphasis>autoyast=tftp://..</emphasis> options.
	      </para>
	    </listitem>
	    
	  </orderedlist>	  
	</listitem>
	<listitem>
	  <para>	    
	    Using 'self-made' CD-ROMs:
	  </para>
	  <para>
	    In this case, you can include the control file on the CD-ROM
	    for easy access (using the <emphasis>autoyast=file://</emphasis>
	    option) or use one of the above mentioned methods used with the 
            original  &company-suse;  CD-ROMs. 
        </para>
        <para>
            When using CD-ROMs for auto-installation, it is necessary to
            instruct the installer to use the CD-ROM for installation and not
            try to find the installation files on the network. This can be
            accomplished by adding the <emphasis>instmode=cd</emphasis> option
            to the kernel command line (this can be done by adding the option
            to the isolinux.cfg file on the CD).<remark>emap 2011-11-07: A bit strange since an installation via network would have to be set up, first.</remark>
        </para>
	</listitem>
	<listitem>
	  <para>
	    Using NFS and Floppy, Network or CD-ROM for system boot-up.<remark>emap 2011-11-07: Isn't this listitem already covered above? </remark>
	  </para>
	  <para>
	    This option is the most important one due to the fact that
	    installations of PC farms are normally done using NFS servers and other
	    network services like  &bootp; and &dhcp;. The control file can reside in
	    the following places:	    
	  </para>
	  <orderedlist>
	    <listitem>
	      <para>
		<emphasis>Floppy/CD-ROM</emphasis>: Control file accessible via the
		<emphasis>autoyast=file://..</emphasis> option.
	      </para>
	    </listitem>
	    <listitem>
	      <para>
		<emphasis>Network</emphasis>: Control file accessible via the
		<emphasis>autoyast=http://..</emphasis>,
		<emphasis>autoyast=ftp://..</emphasis>,
		<emphasis>autoyast=nfs://..</emphasis> or
		<emphasis>autoyast=tftp://..</emphasis> options.
	      </para>
	    </listitem>

	  </orderedlist>	  	 
	</listitem>

      </itemizedlist>

      <note>
	<title>Disabling Network and DHCP</title>
	<para>To disable the network during installations where it is not
	  needed or unavailable, for example when auto-installing from
	  CD-ROMs, use the linuxrc option <emphasis>netsetup</emphasis> to
	  set the network configuration behavior. To disable network setup use
	  <emphasis>netsetup=0</emphasis>.</para>
      </note>
  

      <para>
	If <emphasis>autoyast=default</emphasis> is defined, &yast; will look
	for a file named <filename>autoinst.xml</filename> in
	the following three places: 
      </para>
      <orderedlist>
	<listitem>
	  <para>
	    the root directory of the floppy disk,
	  </para>
	</listitem>
	<listitem>
	  <para>
	    the root directory of the installation medium,
	  </para>
	</listitem>
	<listitem>
	  <para>
	    the root directory of the initial RAM disk used to boot the system.
	  </para>
	</listitem>
      </orderedlist>

      <para>
	With all &ay; invocation options, excluding
	<emphasis>default</emphasis>, it is possible to specify the location of
	the control file in the following ways:
      </para>

      <orderedlist numeration="arabic">
	<listitem>
	  <para>
	    Specify the exact location of the control file:
          </para>
	    <screen>
autoyast=http://192.168.1.1/control-files/client01.xml
	    </screen>
	</listitem>
	<listitem>
	  <para>
	    Specify a directory where several control files are located:
	  </para>
	  <screen>
autoyast=http://192.168.1.1/control-files/
	  </screen>
	  <para>
	    In this case the relevant control file is retrieved using the hex digit
	    representation of the IP as described below.
	  </para>	    	    
	</listitem>
      </orderedlist>
      <para>	
	If only the path prefix variable is defined, &yast; will fetch the
	control file from the specified location in the following way:
      </para>
      <orderedlist numeration="arabic">
	<listitem>
	  <para>
	    First, it will search for the control file using its own IP address in
	    upper case hexadecimal, e.g. <emphasis>192.0.2.91 -> C000025B</emphasis>.
	  </para>
	</listitem>
	<listitem>
	  <para>
	    If this file is not found, &yast; will remove one hex digit and try
	    again. This action is repeated until the file with the correct name
	    is found. Ultimately, it will try looking for a file with the MAC
	    address of the client as the file name (mac should have the
	    following syntax: <emphasis>0080C8F6484C</emphasis>) and if not found a file named 
	    <filename>default</filename> (in lower
	    case).
	  </para>
	</listitem>
      </orderedlist>
    
    <para>
      As an example, for 192.0.2.91, the HTTP client will try:
      </para>
    <literallayout>      
C000025B
C000025
C00002
C0000
C000
C00
C0
C
0080C8F6484C
default
    </literallayout>
    <para>
      in that order. 
      </para>
      <para>
	To determine the hex representation of the IP address of the client,
	use the utility called <command>/usr/sbin/gethostip</command> available
	with the <emphasis>syslinux</emphasis> package.
      </para>
      <example>
	<title>Determine HEX code for an IP address</title>
	<screen>
# /usr/sbin/gethostip 10.10.0.1
10.10.0.1 10.10.0.1 0A0A0001
	</screen>
      </example>



    </section>

    <section id="autoinstall.singlesystem">
      <title id="autoinstall.singlesystem.title">
	Auto-installing a Single System
      </title>
      <para>
	The easiest way to auto-install a system without any network
	connection is to use the original &company-suse; CD-ROMs and a floppy
	disk. You do o need to set up an installation server nor the network
	environment.
      </para>
      <para>
	Create the control file and
	name it <filename>autoinst.xml</filename>. Copy the file
	<filename>autoinst.xml</filename> to a floppy by either mounting the
	floppy or by using the <emphasis>mtools</emphasis>.
      </para>
      <screen>
mcopy autoinst.xml a:
      </screen>

    </section><remark>emap 2011-11-07: This section should be merged with the previous one on auto-install with the original CDs and floppy, with all redundant information dropped.</remark>


    <section>
      <title>Combining linuxrc <emphasis>info</emphasis> file with &yast; control file</title>
      <para>
	If you choose to pass information to  <emphasis>linuxrc</emphasis> using
	the <emphasis>info</emphasis> file, it is possible to integrate the
	keywords in the XML control file. In this case the file has to be
	accessible to linuxrc and has to be named <emphasis>info</emphasis>.
      </para>
      <para>
	Linuxrc will look for a string (<emphasis>start_linuxrc_conf</emphasis>
	in the control file which represents the
	beginning of the file. If it is found, it will parse the content starting
	from that string and will finish when the string
	<emphasis>end_linuxrc_conf</emphasis> is found. The options are stored in
	the control file in the following way:
      </para>
      <example>
	<title>
	  Linxurc options in the control file
	</title>
	<screen>
	  <![CDATA[
....
  <install>
....
    <init>
      <info_file>
<![CDATA[
#
# Don't remove the following line:
# start_linuxrc_conf
#
install: nfs://192.168.1.1/CDs/full-i386
textmode: 1
autoyast: file:///info

# end_linuxrc_conf
# Do not remove the above comment
#
]]]><![CDATA[]>

      </info_file>
    </init>
......
  </install>
....
]]>
	</screen>
      </example>
      <para>
	Note that the "autoyast" keyword must point to the same file. If it
	is on a floppy, then the protocol <emphasis>floppy</emphasis> has to be
	used. If the <emphasis>info</emphasis> file is stored
	in the initial RAM disk, the <emphasis>file</emphasis> option has to be used.
      </para>
    </section>
  </section>
  <section id="System_Configuration">    
    <title id="System_Configuration.title">
      System Configuration 
    </title>
    <para>
      The system configuration during auto-installation is the most important
      part of the whole process. Customizing a system according to your
      environment and needs is what makes an auto-installation system
      attractive, not the installation part.<remark>emap 2011-11-07: Last sentence doesn't make sense. A system can be customized just as well via an interactive YaST installation.</remark>
    </para>
    <para>
      As you have seen in the previous chapters, almost anything can be
      configured automatically on the target system. In addition to the
      pre-defined directives, you can always use post-scripts to change other
      things in the system. Additionally you can change any system variables,
      and if required, copy complete configuration files into the target
      system.
    </para>
    <section>
      <title>
	Post-Install and System Configuration
      </title>
      <para>
	The post-installation and system configuration are initiated directly
	after the last package is installed on the target system and continue
	after the system has booted for the first time.
      </para>
      <para>
	Before the system is booted for the first time, &ay; writes all data
	collected during installation and writes the boot loader in the
	specified location. In addition to these regular tasks, &ay; executes
	the <emphasis>chroot-scripts</emphasis> as specified in the control
	file. Note that these scripts are executed while the system is not yet
	mounted.
      </para>      
      <para>
	If a different kernel than the default is installed, a hard reboot will
	be required. A hard reboot can also be forced during auto-installation,
	independent of the installed kernel. Use the
	<emphasis>reboot</emphasis> property of the
	<emphasis>general</emphasis> resource (see <link
	  linkend="CreateProfile.General">General Options</link>).
      </para>
    </section>
    <section>
      <title>System Customization</title>
      <para>
	Most of the system customization is done in the second stage of the
	installation. If you require customizations that cannot be done using
	&ay; resources, use post-install scripts for further modifications.
      </para>
      <para>
	You can define an unlimited number of custom scripts in the control
	file, either by editing the control file or by using the configuration
	system.	
      </para>      
    </section>
  </section>

  </chapter>




 
      <!--
       Local Variables:
       mode: xml
       sgml-parent-document: ("autoyast.xml" "book" "chapter")
       End:
      --> 
