      <section>
	<title>Installation Server Setup</title>
	
	<para>
	  User intervention depends much on how the server side of a network installation is
	  prepared. In a full network installation, you  have only to turn the
	  client on to initiate an auto-installation process. This can also be
	  automated using different technologies available today (Remote Power
	  Management) or by using	<ulink
	    url="http://www.scyld.com/expert/wake-on-lan.html">Wake-on-LAN</ulink> (WOL).
	</para>
	<section>
	  <title>Setting up an installation repository</title>
	  <para>
	    A system can be setup to serve as a configuration repository. The clients will access
	    the server resources in order to boot, install packages and so on. To
	    achieve this, various network services must be properly set up.
	  </para>
	  <para>
	    The installation server should export the  &company-suse;  Linux distribution's files
	    via &nfs;. Create a directory on a filesystem with enough free space
	    (several gigabytes) and copy the contents of the CDs into this
	    directory. This directory is then to be exported via
	    &nfs; (via an appropriate entry in
	    <filename>/etc/exports</filename>). The following steps describe how to
	    create an installation repository:
	    
	  </para>
	  <para>
	    Login on the machine designated as installation server and create a
	    directory to hold the  &company-suse;  Linux distribution files,
	    i.e. <filename> /usr/local/SuSE/current</filename>. 
	  </para>
	  <para>
	    In our example <filename>/usr/local/SuSE/current</filename> is the base directory for the  &company-suse;  Linux
	    distribution. The location of this directory can be specified  in the <emphasis>info</emphasis> file or on
	    the command line of the kernel (see  below) using the
	    <emphasis>install</emphasis>
	    keyword. (i.e. <emphasis>install=nfs://192.168.1.1/usr/local/SuSE/current</emphasis>)
	  </para>
	  <para>
	    Now copy the files from  all CDs into the
	    <emphasis>current</emphasis> directory or just copy those CDs
	    required for the installation. Make sure that all packages needed for
	    the installation are copied. Make sure the dot files in the root
	    directory of  the CD-ROM are
	    also copied, these files serve as identification of the installation
	    media. Use the following command to copy the CDs.

	  </para>
	  <screen>
mount /cdrom
cd /cdrom && cp -va . /usr/local/SuSE/current ; cd -
umount /cdrom
	  </screen>
	  <para>
	    Repeat this sequence for all other CDs. The directory
	    can have 2 different structures which can be used for installation:
	  </para>
	  <itemizedlist>
	    <listitem>
	      <para>
		The contents of all CDs is copied into one directory and thus
		creating single directory structure with a
		subdirectory <emphasis>suse</emphasis> which included all the
		packages. This type of structure is recommended as it
		is easier to manage and will provide a true, single source
		installation medium.
	      </para>
	      <para>
		To make the directory look like a single medium for the client,
		it is possible to re-create  the package database available on the
		first CD using the script <command>create_package_descr</command>
		which is available in <filename>/usr/lib/YaST2/bin/</filename>.	   
	      </para>
	    </listitem>
	    <listitem>
	      <para>
		Copy the CDs into subdirectories named after the CD number,
		i.e. CD1, CD2, etc.
	      </para>
	      <para>
		Using this structure you will still be able to perform &nfs;
		installations, but the single directories will be treated as if
		they were different mediums. 
	      </para>
	    </listitem>
	  </itemizedlist>
	  <para>
	    After you have copied the CDs into the installation directory, make
	    sure it is exported via &nfs;. You can do that using &yast2; by using the
	    &nfs; server module.
	  </para>
	  <para>
	    Additionally, you need to make the following services  start every
	    time the system boots.
	  </para>
	  <itemizedlist>
	    <listitem>
	      <para>
		nfsserver
	      </para>
	    </listitem>
	    <listitem>
	      <para>
		portmap
	      </para>
	    </listitem>
	  </itemizedlist>
	</section>
	<section>
	  <title>Setting up  a configuration repository</title>
	  <para>
	    A configuration repository holds the control files for multiple
	    machines. The control files can have any file names, which have to
	    specified at the boot time of a client. To avoid supplying the
	    profile name for every client, you can only define the directory of
	    the control files. If a directory is specified, then the client tries
	    to load a file with a name matching it's IP address in hex
	    mode. (See <link linkend="Invoking.HTTP"
	      endterm="Invoking.HTTP.title"> </link>). This has the advantage that you will be dealing with
	    consistent file names rather than IPs as file names which might lead to
	    some confusion.
	  </para>
	  <para>
	    The configuration repository is the same directory you have to define
	    if you are using the configuration system for creating control files.
	  </para>
	  <section>
	    <title>&http; Repository</title>
	    <para>
	      To be able to use the &http; protocol to retrieve control file while
	      auto-installing, you need a working &http; server on the server
	      side. Install <emphasis>Apache</emphasis> or your favorite web
	      server and enable it using &yast2;. Normally the the web server root
	      directory resides in <filename>/usr/local/httpd/htdocs</filename>
	      so you need to create a subdirectory below the root directory of
	      the web server which will be your configuration repository.
	    </para>
	    
	  </section>
	  <section>
	    <title>&nfs; Repository</title>
	    <para>
	      Create a directory and make it available via &nfs; to the clients by
	      exporting it. This directory may for example be in the same place
	      where you have copied the CDs. (i.e. <filename>/usr/local/SuSE</filename>)
	    </para>
	  </section>
	  <section>
	    
	    <title>&tftp; Repository</title>
	    <para>
	      By default the &tftp; directory is available under
	      <filename>/tftpboot</filename> which can also contain boot images
	      if you are booting over network. Do not forget to enable tftp in
	      the inetd configuration file
	      (<filename>/etc/inetd.conf</filename>). <emphasis>Inetd</emphasis> configuration can be
	      done using &yast2;.
	    </para>
	  </section>
	</section>
      </section>

 
    </section>
 
      <!--
       Local Variables:
       mode: xml
       sgml-parent-document: ("autoyast2.xml" "chapter" "section")
       End:
      --> 