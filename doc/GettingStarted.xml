<chapter>
  <title>
    Getting Started
  </title>
  <sect1 id="gettingStarted.collectInfo">
    <title>Collect information</title>
    <para>
      You need to collect information about the machines your are going to
      install. This includes among other things hardware data and network
      information. 
      Please make sure you know the following about the machines you want to install:
    </para>
    <itemizedlist>
      <listitem>
	<para>Hard disk types and sizes</para>	  
      </listitem>
      <listitem>
	<para>Graphic interface and attached monitor if any</para>
      </listitem>
      <listitem>
	<para>Network interface and MAC address if known (i.e. when using &dhcp;)</para>
      </listitem>	
    </itemizedlist>
    <para>
      With these parameters you are ready to go and create a profile of your systems
      to control the auto-installation process.
    </para>
  </sect1>
  <sect1 id="gettingStarted.createProfile">
    <title>Create the control file</title>
    <para>
      To create a control file  you can either  use the configuration
      system which covers most of the features of the auto-installation
      system or you can use your favorite editor. In some cases you may need
      to add some information manually after creating the control file with
      the configuration system available with &company-suse;.
    </para>     
    <para>
      Make sure the configuration system is installed (package
      <emphasis>yast2-config-autoinst</emphasis> and call it using the <emphasis>YaST2 Control
	Center</emphasis> or call it directly as root with the
      following command (make sure the DISPLAY variable is set correctly to
      start the graphical user interface instead of the text based one):
    </para>
    <screen>
/sbin/yast2 autoyast
    </screen>
    <para>
      Consult the chapter dealing with the configuration system to know more
      about how to create a control file using that system.
    </para>
  </sect1>
  <sect1 id="gettingStarted.decide">
    <title>
      Decide how you wish to boot the target system.
    </title>
    <para>
      A target system can be booted in different ways. Booting the machine
      and initiating the auto-installation process is as important as the
      installation itself. Depending on how many target systems you wish to
      install, the following methods are supported:
    </para>
    <itemizedlist>
      <listitem>
	<para>Floppy</para>
	<para>Not recommended in complex network environments. A Floppy
	  nowadays can't hold all necessary information needed to setup a
	  machine for installation. A Floppy  should only be used in very
	  special cases and if it is used, the default boot floppy components
	  supplied with  &company-suse;  must be modified to match you exact needs.
	</para>
	<para>
	  However, the floppy can be used to store the control file and other
	  information needed for installation.
	</para>
      </listitem>
      <listitem>
	<para>CD-ROM</para>
	<para>
	  You can use the original  &company-suse;  CD-ROMs in combination with other
	  media, i.e. with a floppy to hold the control file or in combination
	  with network where the control file can be located.
	</para>
	<para>
	  It is also possible to create customized CD-ROMs to hold only the
	  package you need in addition to the control file which also can be
	  saved on the CD-ROM. This method requires creation of CD-ROMs
	  every time you wish to change the configuration though.
	</para>
      </listitem>
      <listitem>
	<para>Network
	</para>
	<para>
	  Using the network to boot a target system is the most
	  convenient way for auto-installing. Booting over the network and
	  holding a repository of control files on an accessible server can
	  be very flexible especially when configuring different types of
	  system with different roles and hardware.</para>
      </listitem>
    </itemizedlist>
  </sect1>
  <sect1>
    <title>
      Auto-installing a loose system
    </title>
    <para>
      The best way to auto-install one system  without any network connection
      is by using the standard CDs that come with the  &company-suse;  Linux box. Using the
      CDs in combination with the a floppy disk can let you get started with
      AutoYaST very fast and without spending much time configuring server
      environment and network.
    </para>
    <para>
      As it will be discussed in the following chapters, you need to prepare a
      floppy disk with a profile file containing all data needed for &yast2; to
      complete the auto-installation process.
    </para>
    <para>
      Create the control file as described in the <link
	linkend="gettingStarted.createProfile">previous</link> section and
      name it <filename>autoinst.xml</filename>. Copy
      <filename>autoinst.xml</filename> to the floppy by either mounting the
      floppy or by using the <emphasis>mtools</emphasis>.
    </para>
    <screen>
      mcopy autoinst.xml a:
    </screen>

  </sect1>
  <sect1>
    <title>Network installations</title>
    <para>
      User intervention depends much on how the server side of a network installation is
      prepared. In a full network installation, the user has only to turn the
      client on to initiate an auto-installation process. This can also be
      automated using different technologies available today (Remote Power
      Management) or by using	<ulink
	url="http://www.scyld.com/expert/wake-on-lan.html">Wake-on-LAN</ulink> (WOL).
    </para>
    <sect2>
      <title>Setting up an installation repository</title>
      <para>
	The server can server  as a configuration repository. The clients will need to access
	the server resources in order to boot, install packages and so on. To
	achieve this, various network services must be properly set up.
      </para>
      <para>
	The installation server exports the  &company-suse;  Linux distribution's files
	via &nfs;. Create a directory on a filesystem with enough free space
	(several gigabytes) and copy the contents of the CDs into this
	directory. This directory is then to be exported via
	&nfs; (via an appropriate entry in <filename>/etc/exports</filename>).
      </para>
      <para>
	Login on the machine designated as installation server and create a
	directory to hold the  &company-suse;  Linux distribution files,
	eg.<filename> /usr/local/SuSE/current</filename>. 
      </para>
      <para>
	In our example <filename>/usr/local/SuSE/current</filename> is the base directory for the  &company-suse;  Linux
	distribution. The location of this directory can be specified  in the <emphasis>info</emphasis> file or on
	the command line of the kernel (see  below) using the
	<emphasis>install</emphasis>
	keyword. (i.e. <emphasis>install=nfs://192.168.1.1/usr/local/SuSE/current</emphasis>)
      </para>
      <para>
	Next copy the files from the all CDs into the
	<emphasis>current</emphasis> directory or just copy those CDs
	required for the installation. Make sure that all packages needed for
	the installation are copied. Make sure the dot files on the CD-ROM are
	also copied which server as identification of the media)

      </para>
      <screen>
	mount /cdrom
	cd /cdrom && cp -va . /usr/local/SuSE/current ; cd -
	umount /cdrom
      </screen>
      <para>
	Repeat this sequence for all other CDs. The directory
	can have 2 different structures which can be used for installation:
      </para>
      <itemizedlist>
	<listitem>
	  <para>
	    The contents of all CDs is copied into one directory and thus
	    creating single directory structure with a
	    subdirectory <emphasis>suse</emphasis> which included all the
	    package groups. This type of structure is recommended as it
	    is easier to manage and will provide a true, single source
	    installation medium.
	  </para>
	  <para>
	    To make the directory look like a single medium for the client,
	    you can modify the package database available on the CDs by
	    replacing the reference to the different CDs to one single CD,
	    which is in our case CD number 1.
	  </para>
	  <para>
	    Use the following 'one liner' to modify the installation path in
	    the text based package database available in the directory
	    <filename>suse/setup/descr</filename>:
	  </para>
	  <screen>
	    cd /usr/local/SuSE/current/suse/setup/descr
	    perl -pi -e 's/InstPath:\t0[2|3|4|5|6|7]/InstPath:\t01/' common.pkd
	    cd -
	  </screen>
	</listitem>
	<listitem>
	  <para>
	    Copy the CDs into subdirectories named after the CD number,
	    i.e. CD1, CD2, etc.
	  </para>
	  <para>
	    Using this structure you will still be able to perform &nfs;
	    installations, but the single directories will be treated as if
	    they were different mediums. 
	  </para>
	</listitem>
      </itemizedlist>
      <para>
	After you have copied the CDs into the installation directory, make
	sure it is exported via &nfs;. You can do that using &yast2; by using the
	&nfs; server module.
      </para>
      <para>
	Additionally, you need to modify the following services to start every
	time the system boots.
      </para>
      <itemizedlist>
	<listitem>
	  <para>
	    nfsserver
	  </para>
	</listitem>
	<listitem>
	  <para>
	    portmap
	  </para>
	</listitem>
      </itemizedlist>
    </sect2>
    <sect2>
      <title>Setting up  a configuration repository</title>
      <para>
	A configuration repository holds the control file for multiple
	machines. The control files can have any file names, which have to
	specified at the boot time of a client. To avoid supplying the
	profile name for every client, you can only define the directory of
	the control files. If a directory is specified, then the client tries
	to load a file with a name matching it's IP address in hex
	mode. (See <link linkend="Invoking.HTTP"
	  endterm="Invoking.HTTP.title"> </link>). This has the advantage that you will be dealing with
	consistent file names rather than IPs as filenames which might lead to
	some confusion.
      </para>
      <para>
	The configuration repository is the same directory you have to define
	if you are using the configuration system for creating control files.
      </para>
      <sect3>
	<title>&http; Repository</title>
	<para>
	  To be able to use the &http; protocol to retrieve control file while
	  auto-installing, you need a working &http; server on the server
	  side. Install <emphasis>Apache</emphasis> or your favorite web
	  server and enable it using &yast2;. Normally the the web server root
	  directory resides in <filename>/usr/local/httpd/htdocs</filename>
	  so you need to create a subdirectory below the root directory of
	  the web server which will be your configuration repository.
	</para>
	
      </sect3>
      <sect3>
	<title>&nfs; Repository</title>
	<para>
	  Create a directory and make it available via &nfs; to the clients by
	  exporting it. This directory may for example be in the same place
	  where you have copied the CDs. (<filename>/usr/local/SuSE</filename>)
	</para>
      </sect3>
      <sect3>
	<title>&tftp; Repository</title>
	<para>
	  By default the &tftp; directory is available under
	  <filename>/tftpboot</filename> which can also contain boot images
	  if you are booting over network. Do not forget to enable tftp in
	  the inetd configuration file
	  (<filename>/etc/inetd.conf</filename>). <emphasis>Inetd</emphasis> configuration can be
	  done using &yast2;.
	</para>
      </sect3>
    </sect2>



    
  </sect1>
</chapter>

  <!--
  Local Variables:
  mode: xml
  sgml-parent-document: ("autoyast2.xml" "book" "chapter")
  End:
  -->
